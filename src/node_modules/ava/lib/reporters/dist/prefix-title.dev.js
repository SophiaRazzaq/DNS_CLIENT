"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = prefixTitle;

var _nodePath = _interopRequireDefault(require("node:path"));

var _figures = _interopRequireDefault(require("figures"));

var _chalk = require("../chalk.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

var SEPARATOR = ' ' + _chalk.chalk.gray.dim(_figures["default"].pointerSmall) + ' ';

function prefixTitle(extensions, base, file, title) {
  var parts = file // Only replace base if it is found at the start of the path
  .replace(base, function (match, offset) {
    return offset === 0 ? '' : match;
  }).split(_nodePath["default"].sep).filter(function (p) {
    return p !== '__tests__';
  });
  var filename = parts.pop().replace(/\.spec\./, '.').replace(/\.test\./, '.').replace(/test-/, '').replace(new RegExp(".(".concat(extensions.join('|'), ")$")), '');
  return [].concat(_toConsumableArray(parts), [filename, title]).join(SEPARATOR);
}