"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.expectTypes = expectTypes;

var _assertionError = require("assertion-error");

var _flag = require("./flag.js");

var _typeDetect = require("./type-detect.js");

/*!
 * Chai - expectTypes utility
 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
 * MIT Licensed
 */

/**
 * ### .expectTypes(obj, types)
 *
 * Ensures that the object being tested against is of a valid type.
 *
 *     utils.expectTypes(this, ['array', 'object', 'string']);
 *
 * @param {unknown} obj constructed Assertion
 * @param {Array} types A list of allowed types for this assertion
 * @namespace Utils
 * @name expectTypes
 * @public
 */
function expectTypes(obj, types) {
  var flagMsg = (0, _flag.flag)(obj, 'message');
  var ssfi = (0, _flag.flag)(obj, 'ssfi');
  flagMsg = flagMsg ? flagMsg + ': ' : '';
  obj = (0, _flag.flag)(obj, 'object');
  types = types.map(function (t) {
    return t.toLowerCase();
  });
  types.sort(); // Transforms ['lorem', 'ipsum'] into 'a lorem, or an ipsum'

  var str = types.map(function (t, index) {
    var art = ~['a', 'e', 'i', 'o', 'u'].indexOf(t.charAt(0)) ? 'an' : 'a';
    var or = types.length > 1 && index === types.length - 1 ? 'or ' : '';
    return or + art + ' ' + t;
  }).join(', ');
  var objType = (0, _typeDetect.type)(obj).toLowerCase();

  if (!types.some(function (expected) {
    return objType === expected;
  })) {
    throw new _assertionError.AssertionError(flagMsg + 'object tested must be ' + str + ', but ' + objType + ' given', undefined, ssfi);
  }
}