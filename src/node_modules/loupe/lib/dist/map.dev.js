"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = inspectMap;

var _helpers = require("./helpers.js");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function inspectMapEntry(_ref, options) {
  var _ref2 = _slicedToArray(_ref, 2),
      key = _ref2[0],
      value = _ref2[1];

  options.truncate -= 4;
  key = options.inspect(key, options);
  options.truncate -= key.length;
  value = options.inspect(value, options);
  return "".concat(key, " => ").concat(value);
} // IE11 doesn't support `map.entries()`


function mapToEntries(map) {
  var entries = [];
  map.forEach(function (value, key) {
    entries.push([key, value]);
  });
  return entries;
}

function inspectMap(map, options) {
  var size = map.size - 1;

  if (size <= 0) {
    return 'Map{}';
  }

  options.truncate -= 7;
  return "Map{ ".concat((0, _helpers.inspectList)(mapToEntries(map), options, inspectMapEntry), " }");
}