"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var path = require('path');

var url = require('url');

var forward = function forward(x) {
  return x;
};

var formattedImport = function formattedImport(file) {
  var esmDecorator,
      newErrorWithFilename,
      _args = arguments;
  return regeneratorRuntime.async(function formattedImport$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          esmDecorator = _args.length > 1 && _args[1] !== undefined ? _args[1] : forward;

          if (!path.isAbsolute(file)) {
            _context.next = 15;
            break;
          }

          _context.prev = 2;
          _context.next = 5;
          return regeneratorRuntime.awrap(exports.doImport(esmDecorator(url.pathToFileURL(file))));

        case 5:
          return _context.abrupt("return", _context.sent);

        case 8:
          _context.prev = 8;
          _context.t0 = _context["catch"](2);

          if (!(_context.t0 instanceof SyntaxError && _context.t0.message && _context.t0.stack && !_context.t0.stack.includes(file))) {
            _context.next = 14;
            break;
          }

          newErrorWithFilename = new SyntaxError(_context.t0.message);
          newErrorWithFilename.stack = _context.t0.stack.replace(/^SyntaxError/, "SyntaxError[ @".concat(file, " ]"));
          throw newErrorWithFilename;

        case 14:
          throw _context.t0;

        case 15:
          return _context.abrupt("return", exports.doImport(esmDecorator(file)));

        case 16:
        case "end":
          return _context.stop();
      }
    }
  }, null, null, [[2, 8]]);
};

exports.doImport = function _callee(file) {
  return regeneratorRuntime.async(function _callee$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          return _context2.abrupt("return", Promise.resolve().then(function () {
            return _interopRequireWildcard(require("".concat(file)));
          }));

        case 1:
        case "end":
          return _context2.stop();
      }
    }
  });
};

exports.requireOrImport = function _callee2(file, esmDecorator) {
  return regeneratorRuntime.async(function _callee2$(_context3) {
    while (1) {
      switch (_context3.prev = _context3.next) {
        case 0:
          if (!(path.extname(file) === '.mjs')) {
            _context3.next = 2;
            break;
          }

          return _context3.abrupt("return", formattedImport(file, esmDecorator));

        case 2:
          _context3.prev = 2;
          _context3.t0 = dealWithExports;
          _context3.next = 6;
          return regeneratorRuntime.awrap(formattedImport(file, esmDecorator));

        case 6:
          _context3.t1 = _context3.sent;
          return _context3.abrupt("return", (0, _context3.t0)(_context3.t1));

        case 10:
          _context3.prev = 10;
          _context3.t2 = _context3["catch"](2);

          if (!(_context3.t2.code === 'ERR_MODULE_NOT_FOUND' || _context3.t2.code === 'ERR_UNKNOWN_FILE_EXTENSION' || _context3.t2.code === 'ERR_UNSUPPORTED_DIR_IMPORT')) {
            _context3.next = 26;
            break;
          }

          _context3.prev = 13;
          return _context3.abrupt("return", require(file));

        case 17:
          _context3.prev = 17;
          _context3.t3 = _context3["catch"](13);

          if (!(_context3.t3.code === 'ERR_REQUIRE_ESM' || _context3.t3 instanceof SyntaxError && _context3.t3.toString().includes('Cannot use import statement outside a module'))) {
            _context3.next = 23;
            break;
          }

          throw _context3.t2;

        case 23:
          throw _context3.t3;

        case 24:
          _context3.next = 27;
          break;

        case 26:
          throw _context3.t2;

        case 27:
        case "end":
          return _context3.stop();
      }
    }
  }, null, null, [[2, 10], [13, 17]]);
};

function dealWithExports(module) {
  if (module["default"]) {
    return module["default"];
  } else {
    return _objectSpread({}, module, {
      "default": undefined
    });
  }
}

exports.loadFilesAsync = function _callee3(files, preLoadFunc, postLoadFunc, esmDecorator) {
  var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, file, result;

  return regeneratorRuntime.async(function _callee3$(_context4) {
    while (1) {
      switch (_context4.prev = _context4.next) {
        case 0:
          _iteratorNormalCompletion = true;
          _didIteratorError = false;
          _iteratorError = undefined;
          _context4.prev = 3;
          _iterator = files[Symbol.iterator]();

        case 5:
          if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
            _context4.next = 15;
            break;
          }

          file = _step.value;
          preLoadFunc(file);
          _context4.next = 10;
          return regeneratorRuntime.awrap(exports.requireOrImport(path.resolve(file), esmDecorator));

        case 10:
          result = _context4.sent;
          postLoadFunc(file, result);

        case 12:
          _iteratorNormalCompletion = true;
          _context4.next = 5;
          break;

        case 15:
          _context4.next = 21;
          break;

        case 17:
          _context4.prev = 17;
          _context4.t0 = _context4["catch"](3);
          _didIteratorError = true;
          _iteratorError = _context4.t0;

        case 21:
          _context4.prev = 21;
          _context4.prev = 22;

          if (!_iteratorNormalCompletion && _iterator["return"] != null) {
            _iterator["return"]();
          }

        case 24:
          _context4.prev = 24;

          if (!_didIteratorError) {
            _context4.next = 27;
            break;
          }

          throw _iteratorError;

        case 27:
          return _context4.finish(24);

        case 28:
          return _context4.finish(21);

        case 29:
        case "end":
          return _context4.stop();
      }
    }
  }, null, null, [[3, 17, 21, 29], [22,, 24, 28]]);
};