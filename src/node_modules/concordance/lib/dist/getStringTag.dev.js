'use strict';

var ts = Object.prototype.toString;

function getStringTag(value) {
  return ts.call(value).slice(8, -1);
}

var fts = Function.prototype.toString;
var promiseCtorString = fts.call(Promise);

var isPromise = function isPromise(value) {
  if (!value.constructor) return false;

  try {
    return fts.call(value.constructor) === promiseCtorString;
  } catch (_unused) {
    return false;
  }
};

if (getStringTag(Promise.resolve()) === 'Promise') {
  module.exports = getStringTag;
} else {
  var getStringTagWithPromiseWorkaround = function getStringTagWithPromiseWorkaround(value) {
    var stringTag = getStringTag(value);
    return stringTag === 'Object' && isPromise(value) ? 'Promise' : stringTag;
  };

  module.exports = getStringTagWithPromiseWorkaround;
}