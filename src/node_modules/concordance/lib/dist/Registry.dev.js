'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Registry =
/*#__PURE__*/
function () {
  function Registry() {
    _classCallCheck(this, Registry);

    this.counter = 0;
    this.map = new WeakMap();
  }

  _createClass(Registry, [{
    key: "has",
    value: function has(value) {
      return this.map.has(value);
    }
  }, {
    key: "get",
    value: function get(value) {
      return this.map.get(value).descriptor;
    }
  }, {
    key: "alloc",
    value: function alloc(value) {
      var index = ++this.counter;
      var pointer = {
        descriptor: null,
        index: index
      };
      this.map.set(value, pointer);
      return pointer;
    }
  }]);

  return Registry;
}();

module.exports = Registry;