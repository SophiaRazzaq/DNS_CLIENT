'use strict';

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var constants = require('../constants');

var formatUtils = require('../formatUtils');

var isEnumerable = require('../isEnumerable');

var lineBuilder = require('../lineBuilder');

var NOOP_RECURSOR = require('../recursorUtils').NOOP_RECURSOR;

var object = require('./object');

var UNEQUAL = constants.UNEQUAL;

function describe(props) {
  var error = props.value;
  return new DescribedErrorValue(Object.assign({
    nameIsEnumerable: isEnumerable(error, 'name'),
    name: error.name,
    messageIsEnumerable: isEnumerable(error, 'message'),
    message: error.message
  }, props));
}

exports.describe = describe;

function deserialize(state, recursor) {
  return new DeserializedErrorValue(state, recursor);
}

exports.deserialize = deserialize;
var tag = Symbol('ErrorValue');
exports.tag = tag;

var ErrorValue =
/*#__PURE__*/
function (_object$ObjectValue) {
  _inherits(ErrorValue, _object$ObjectValue);

  function ErrorValue(props) {
    var _this;

    _classCallCheck(this, ErrorValue);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(ErrorValue).call(this, props));
    _this.name = props.name;
    return _this;
  }

  _createClass(ErrorValue, [{
    key: "compare",
    value: function compare(expected) {
      return this.tag === expected.tag && this.name === expected.name ? _get(_getPrototypeOf(ErrorValue.prototype), "compare", this).call(this, expected) : UNEQUAL;
    }
  }, {
    key: "formatShallow",
    value: function formatShallow(theme, indent) {
      var name = this.name || this.ctor;
      var string = name ? formatUtils.wrap(theme.error.name, name) : formatUtils.wrap(theme.object.stringTag, this.stringTag);

      if (this.ctor && this.ctor !== name) {
        string += ' ' + formatUtils.wrap(theme.error.ctor, this.ctor);
      }

      if (this.stringTag && this.stringTag !== this.ctor && this.name && !this.name.includes(this.stringTag)) {
        string += ' ' + formatUtils.wrap(theme.object.secondaryStringTag, this.stringTag);
      }

      string += ' ' + theme.object.openBracket;
      return _get(_getPrototypeOf(ErrorValue.prototype), "formatShallow", this).call(this, theme, indent).customize({
        finalize: function finalize(innerLines) {
          return innerLines.isEmpty ? lineBuilder.single(string + theme.object.closeBracket) : lineBuilder.first(string).concat(innerLines.withFirstPrefixed(indent.increase()).stripFlags()).append(lineBuilder.last(indent + theme.object.closeBracket));
        },
        maxDepth: function maxDepth() {
          return lineBuilder.single(string + ' ' + theme.maxDepth + ' ' + theme.object.closeBracket);
        }
      });
    }
  }, {
    key: "serialize",
    value: function serialize() {
      return [this.name, _get(_getPrototypeOf(ErrorValue.prototype), "serialize", this).call(this)];
    }
  }]);

  return ErrorValue;
}(object.ObjectValue);

Object.defineProperty(ErrorValue.prototype, 'tag', {
  value: tag
});

var DescribedErrorValue =
/*#__PURE__*/
function (_object$DescribedMixi) {
  _inherits(DescribedErrorValue, _object$DescribedMixi);

  function DescribedErrorValue(props) {
    var _this2;

    _classCallCheck(this, DescribedErrorValue);

    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(DescribedErrorValue).call(this, props));
    _this2.nameIsEnumerable = props.nameIsEnumerable;
    _this2.messageIsEnumerable = props.messageIsEnumerable;
    _this2.message = props.message;
    return _this2;
  }

  _createClass(DescribedErrorValue, [{
    key: "createPropertyRecursor",
    value: function createPropertyRecursor() {
      var _this3 = this;

      var recursor = _get(_getPrototypeOf(DescribedErrorValue.prototype), "createPropertyRecursor", this).call(this);

      var skipName = this.nameIsEnumerable;
      var emitMessage = !this.messageIsEnumerable;
      var size = recursor.size;

      if (skipName && size > 0) {
        size -= 1;
      }

      if (emitMessage) {
        size += 1;
      }

      if (size === 0) return NOOP_RECURSOR;
      var done = false;

      var next = function next() {
        if (done) return null;
        var property = recursor.next();

        if (property) {
          if (skipName && property.key.value === 'name') {
            skipName = false;
            return next();
          }

          return property;
        }

        if (emitMessage) {
          emitMessage = false;
          return _this3.describeProperty('message', _this3.describeAny(_this3.message));
        }

        done = true;
        return null;
      };

      return {
        size: size,
        next: next
      };
    }
  }]);

  return DescribedErrorValue;
}(object.DescribedMixin(ErrorValue));

var DeserializedErrorValue =
/*#__PURE__*/
function (_object$DeserializedM) {
  _inherits(DeserializedErrorValue, _object$DeserializedM);

  function DeserializedErrorValue(state, recursor) {
    var _this4;

    _classCallCheck(this, DeserializedErrorValue);

    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(DeserializedErrorValue).call(this, state[1], recursor));
    _this4.name = state[0];
    return _this4;
  }

  return DeserializedErrorValue;
}(object.DeserializedMixin(ErrorValue));