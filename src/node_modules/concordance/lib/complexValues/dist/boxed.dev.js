'use strict';

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var stringPrimitive = require('../primitiveValues/string').tag;

var recursorUtils = require('../recursorUtils');

var object = require('./object');

function describe(props) {
  return new DescribedBoxedValue(props);
}

exports.describe = describe;

function deserialize(state, recursor) {
  return new DeserializedBoxedValue(state, recursor);
}

exports.deserialize = deserialize;
var tag = Symbol('BoxedValue');
exports.tag = tag;

var BoxedValue =
/*#__PURE__*/
function (_object$ObjectValue) {
  _inherits(BoxedValue, _object$ObjectValue);

  function BoxedValue() {
    _classCallCheck(this, BoxedValue);

    return _possibleConstructorReturn(this, _getPrototypeOf(BoxedValue).apply(this, arguments));
  }

  return BoxedValue;
}(object.ObjectValue);

Object.defineProperty(BoxedValue.prototype, 'tag', {
  value: tag
});

var DescribedBoxedValue =
/*#__PURE__*/
function (_object$DescribedMixi) {
  _inherits(DescribedBoxedValue, _object$DescribedMixi);

  function DescribedBoxedValue(props) {
    var _this;

    _classCallCheck(this, DescribedBoxedValue);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(DescribedBoxedValue).call(this, props));
    _this.unboxed = props.unboxed;
    return _this;
  }

  _createClass(DescribedBoxedValue, [{
    key: "createListRecursor",
    value: function createListRecursor() {
      return recursorUtils.NOOP_RECURSOR;
    }
  }, {
    key: "createPropertyRecursor",
    value: function createPropertyRecursor() {
      if (this.unboxed.tag !== stringPrimitive) return _get(_getPrototypeOf(DescribedBoxedValue.prototype), "createPropertyRecursor", this).call(this); // Just so that createPropertyRecursor() skips the index-based character
      // properties.

      try {
        this.isList = true;
        return _get(_getPrototypeOf(DescribedBoxedValue.prototype), "createPropertyRecursor", this).call(this);
      } finally {
        this.isList = false;
      }
    }
  }, {
    key: "createRecursor",
    value: function createRecursor() {
      return recursorUtils.unshift(_get(_getPrototypeOf(DescribedBoxedValue.prototype), "createRecursor", this).call(this), this.unboxed);
    }
  }]);

  return DescribedBoxedValue;
}(object.DescribedMixin(BoxedValue));

var DeserializedBoxedValue = object.DeserializedMixin(BoxedValue);