"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.walk = walk;
exports.asyncWalk = asyncWalk;

var _sync = require("./sync.js");

var _async = require("./async.js");

// @ts-check

/** @typedef { import('estree').BaseNode} BaseNode */

/** @typedef { import('./sync.js').SyncHandler} SyncHandler */

/** @typedef { import('./async.js').AsyncHandler} AsyncHandler */

/**
 *
 * @param {BaseNode} ast
 * @param {{
 *   enter?: SyncHandler
 *   leave?: SyncHandler
 * }} walker
 * @returns {BaseNode}
 */
function walk(ast, _ref) {
  var enter = _ref.enter,
      leave = _ref.leave;
  var instance = new _sync.SyncWalker(enter, leave);
  return instance.visit(ast, null);
}
/**
 *
 * @param {BaseNode} ast
 * @param {{
 *   enter?: AsyncHandler
 *   leave?: AsyncHandler
 * }} walker
 * @returns {Promise<BaseNode>}
 */


function asyncWalk(ast, _ref2) {
  var enter, leave, instance;
  return regeneratorRuntime.async(function asyncWalk$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          enter = _ref2.enter, leave = _ref2.leave;
          instance = new _async.AsyncWalker(enter, leave);
          _context.next = 4;
          return regeneratorRuntime.awrap(instance.visit(ast, null));

        case 4:
          return _context.abrupt("return", _context.sent);

        case 5:
        case "end":
          return _context.stop();
      }
    }
  });
}