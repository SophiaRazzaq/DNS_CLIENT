'use strict';

var crypto = require('crypto');

module.exports = function (data) {
  var hash = crypto.createHash('md5');

  var update = function update(buffer) {
    var inputEncoding = typeof buffer === 'string' ? 'utf8' : undefined;
    hash.update(buffer, inputEncoding);
  };

  if (Array.isArray(data)) {
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var element = _step.value;
        update(element);
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator["return"] != null) {
          _iterator["return"]();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
  } else {
    update(data);
  }

  return hash.digest('hex');
};